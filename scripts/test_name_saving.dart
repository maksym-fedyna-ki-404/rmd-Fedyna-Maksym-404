import 'dart:io';
import 'package:flutter_dotenv/flutter_dotenv.dart';
import 'package:supabase_flutter/supabase_flutter.dart';

void main() async {
  print('üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —ñ–º–µ–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞...');
  
  try {
    // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ .env —Ñ–∞–π–ª
    await dotenv.load(fileName: ".env");
    
    final supabaseUrl = dotenv.env['SUPABASE_URL'] ?? '';
    final supabaseAnonKey = dotenv.env['SUPABASE_ANON_KEY'] ?? '';
    
    if (supabaseUrl.isEmpty || supabaseAnonKey.isEmpty) {
      print('‚ùå –í—ñ–¥—Å—É—Ç–Ω—ñ Supabase credentials –≤ .env —Ñ–∞–π–ª—ñ');
      exit(1);
    }
    
    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ Supabase
    await Supabase.initialize(
      url: supabaseUrl,
      anonKey: supabaseAnonKey,
    );
    
    final supabase = Supabase.instance.client;
    
    // –¢–µ—Å—Ç—É—î–º–æ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –∑ —ñ–º–µ–Ω–µ–º
    final testEmail = 'test_name_${DateTime.now().millisecondsSinceEpoch}@example.com';
    final testPassword = 'testpassword123';
    final testName = '–¢–µ—Å—Ç –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á';
    
    print('üë§ –¢–µ—Å—Ç—É—î–º–æ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –∑ —ñ–º–µ–Ω–µ–º...');
    print('üìß Email: $testEmail');
    print('üë§ Name: $testName');
    
    try {
      final authResponse = await supabase.auth.signUp(
        email: testEmail,
        password: testPassword,
        data: {
          'name': testName,
          'full_name': testName,
          'display_name': testName,
        },
      );
      
      if (authResponse.user != null) {
        print('‚úÖ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —É—Å–ø—ñ—à–Ω–∞!');
        print('üÜî User ID: ${authResponse.user!.id}');
        print('üìß Email: ${authResponse.user!.email}');
        
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ metadata
        print('üîç –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ metadata...');
        final metadata = authResponse.user!.userMetadata;
        if (metadata != null) {
          print('üìã Metadata: $metadata');
          print('üë§ Name: ${metadata['name']}');
          print('üë§ Full Name: ${metadata['full_name']}');
          print('üë§ Display Name: ${metadata['display_name']}');
        } else {
          print('‚ö†Ô∏è  Metadata –ø–æ—Ä–æ–∂–Ω—ñ');
        }
        
        // –°–ø—Ä–æ–±—É—î–º–æ –æ–Ω–æ–≤–∏—Ç–∏ metadata
        print('üîÑ –û–Ω–æ–≤–ª—é—î–º–æ metadata...');
        try {
          await supabase.auth.updateUser(
            UserAttributes(
              data: {
                'name': testName,
                'full_name': testName,
                'display_name': testName,
              }
            )
          );
          print('‚úÖ Metadata –æ–Ω–æ–≤–ª–µ–Ω–æ');
        } catch (updateError) {
          print('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è metadata: $updateError');
        }
        
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        print('üîç –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞...');
        final currentUser = supabase.auth.currentUser;
        if (currentUser != null) {
          print('üë§ Current User Name: ${currentUser.userMetadata?['name']}');
        }
        
        // –í–∏–¥–∞–ª—è—î–º–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        await supabase.auth.signOut();
        print('üóëÔ∏è  –¢–µ—Å—Ç–æ–≤–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∏–¥–∞–ª–µ–Ω–æ');
      } else {
        print('‚ö†Ô∏è  –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
      }
    } catch (e) {
      print('‚ùå –ü–æ–º–∏–ª–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó: $e');
    }
    
    print('üéâ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    
  } catch (e) {
    print('‚ùå –ü–æ–º–∏–ª–∫–∞: $e');
    exit(1);
  }
}
