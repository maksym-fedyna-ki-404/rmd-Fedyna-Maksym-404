import 'dart:io';

void main() async {
  print('üîß –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö...');
  
  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —ñ—Å–Ω—É—î .env —Ñ–∞–π–ª
  final envFile = File('.env');
  if (!envFile.existsSync()) {
    print('‚ùå –§–∞–π–ª .env –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!');
    print('üìã –°—Ç–≤–æ—Ä—é—î–º–æ .env —Ñ–∞–π–ª –∑ –ø—Ä–∏–∫–ª–∞–¥—É...');
    
    // –°—Ç–≤–æ—Ä—é—î–º–æ .env —Ñ–∞–π–ª –∑ env.example
    final envExample = File('env.example');
    if (envExample.existsSync()) {
      final content = await envExample.readAsString();
      await envFile.writeAsString(content);
      print('‚úÖ –§–∞–π–ª .env —Å—Ç–≤–æ—Ä–µ–Ω–æ –∑ env.example');
    } else {
      print('‚ùå –§–∞–π–ª env.example —Ç–∞–∫–æ–∂ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!');
      exit(1);
    }
  }
  
  print('‚úÖ –§–∞–π–ª .env –∑–Ω–∞–π–¥–µ–Ω–æ');
  
  // –ì–µ–Ω–µ—Ä—É—î–º–æ Prisma –∫–ª—ñ—î–Ω—Ç
  print('üî® –ì–µ–Ω–µ—Ä—É—î–º–æ Prisma –∫–ª—ñ—î–Ω—Ç...');
  final generateResult = await Process.run('npx', ['prisma', 'generate']);
  if (generateResult.exitCode != 0) {
    print('‚ùå –ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó Prisma –∫–ª—ñ—î–Ω—Ç–∞:');
    print(generateResult.stderr);
    print('‚ö†Ô∏è  –ü—Ä–æ–¥–æ–≤–∂—É—î–º–æ –±–µ–∑ Prisma –º—ñ–≥—Ä–∞—Ü—ñ–π...');
  } else {
    print('‚úÖ Prisma –∫–ª—ñ—î–Ω—Ç –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ');
  }
  
  // –°–ø—Ä–æ–±—É—î–º–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –º—ñ–≥—Ä–∞—Ü—ñ—é, –∞–ª–µ –Ω–µ –∑—É–ø–∏–Ω—è—î–º–æ—Å—è –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ
  print('üìä –ù–∞–º–∞–≥–∞—î–º–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ –º—ñ–≥—Ä–∞—Ü—ñ—é –±–∞–∑–∏ –¥–∞–Ω–∏—Ö...');
  final migrateResult = await Process.run('npx', ['prisma', 'migrate', 'dev', '--name', 'init']);
  if (migrateResult.exitCode != 0) {
    print('‚ö†Ô∏è  –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –º—ñ–≥—Ä–∞—Ü—ñ—ó (—Ü–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –ø–µ—Ä—à–æ–≥–æ –∑–∞–ø—É—Å–∫—É):');
    print(migrateResult.stderr);
    print('üí° –°–ø—Ä–æ–±—É—î–º–æ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π —Å–ø–æ—Å—ñ–±...');
    
    // –°–ø—Ä–æ–±—É—î–º–æ db push –∑–∞–º—ñ—Å—Ç—å migrate
    print('üîÑ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ db push...');
    final pushResult = await Process.run('npx', ['prisma', 'db', 'push']);
    if (pushResult.exitCode != 0) {
      print('‚ö†Ô∏è  –ü–æ–º–∏–ª–∫–∞ db push:');
      print(pushResult.stderr);
      print('üìù –ú–æ–∂–ª–∏–≤–æ, –ø–æ—Ç—Ä—ñ–±–Ω–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ DATABASE_URL –≤ .env —Ñ–∞–π–ª—ñ');
    } else {
      print('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∞ —á–µ—Ä–µ–∑ db push');
    }
  } else {
    print('‚úÖ –ú—ñ–≥—Ä–∞—Ü—ñ—è —Å—Ç–≤–æ—Ä–µ–Ω–∞');
  }
  
  print('üéâ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
  print('üìù –í–∞–∂–ª–∏–≤–æ: –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ .env —Ñ–∞–π–ª —Ç–∞ –Ω–∞–ª–∞—à—Ç—É–π—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ Supabase credentials');
  print('üìù –ü–æ—Ç—ñ–º –∑–∞–ø—É—Å—Ç—ñ—Ç—å: npm run db:studio –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –±–∞–∑–∏ –¥–∞–Ω–∏—Ö');
}
